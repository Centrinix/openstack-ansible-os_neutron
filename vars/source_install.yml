---
# Copyright 2018, SUSE Linux GmbH.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###
### Packages
###

#
# Compile a list of the distro packages to install based on
# whether the host is in the host group and the service is
# enabled.
#
neutron_package_list: |-
  {% set packages = neutron_distro_packages %}
  {% if neutron_needs_openvswitch | bool %}
  {% if (ovs_nsh_support and ansible_pkg_mgr in ['apt', 'zypper']) %}
  {% set _ = packages.extend(neutron_ovs_nsh_required_packages) %}
  {% else %}
  {% set _ = packages.extend(neutron_ovs_distro_packages) %}
  {% endif %}
  {% endif %}
  {% if neutron_services['neutron-linuxbridge-agent']['group'] in group_names and neutron_services['neutron-linuxbridge-agent'].service_en | bool %}
  {% set _ = packages.extend(neutron_lxb_distro_packages) %}
  {% endif %}
  {% if neutron_services['neutron-lbaasv2-agent']['group'] in group_names and neutron_lbaasv2 | bool %}
  {% set _ = packages.extend(neutron_lbaas_distro_packages) %}
  {% endif %}
  {% if neutron_services['neutron-vpnaas-agent']['group'] in group_names and neutron_vpnaas | bool %}
  {% set _ = packages.extend(neutron_vpnaas_distro_packages) %}
  {% endif %}
  {% if neutron_services['neutron-metadata-agent']['group'] in group_names %}
  {% set _ = packages.extend(neutron_metadata_agent_distro_packages) %}
  {% endif %}
  {% if neutron_developer_mode | bool %}
  {%   set _ = packages.extend(neutron_developer_mode_distro_packages) %}
  {% endif %}
  {% set _ = packages.extend(neutron_devel_distro_packages) %}
  {{ packages }}

neutron_pip_packages:
  - cliff
  - configobj
  - cryptography
  - keystonemiddleware
  - PyMySQL
  - neutron
  - python-glanceclient
  - python-keystoneclient
  - python-memcached
  - python-neutronclient
  - python-novaclient
  - repoze.lru

neutron_optional_bgp_pip_packages:
  - neutron_dynamic_routing

neutron_optional_calico_pip_packages:
  - networking-calico
  - python-etcd

neutron_optional_fwaas_pip_packages:
  - neutron_fwaas

neutron_optional_lbaas_pip_packages:
  - neutron_lbaas

neutron_optional_vpnaas_pip_packages:
  - neutron_vpnaas

neutron_optional_dragonflow_pip_packages:
  - dragonflow
  - python-etcd

neutron_optional_opendaylight_pip_packages:
  - networking-odl
  - networking-bgpvpn

neutron_optional_opendaylight_sfc_pip_packages:
  - networking-sfc

neutron_proprietary_nuage_pip_packages:
  - nuage-openstack-neutron
  - nuage-openstack-neutronclient
  - nuagenetlib

neutron_developer_constraints:
  - "git+{{ neutron_git_repo }}@{{ neutron_git_install_branch }}#egg=neutron"
  - "git+{{ neutron_fwaas_git_repo }}@{{ neutron_fwaas_git_install_branch }}#egg=neutron-fwaas"
  - "git+{{ neutron_lbaas_git_repo }}@{{ neutron_lbaas_git_install_branch }}#egg=neutron-lbaas"
  - "git+{{ neutron_vpnaas_git_repo }}@{{ neutron_vpnaas_git_install_branch }}#egg=neutron-vpnaas"
  - "git+{{ neutron_dynamic_routing_git_repo }}@{{ neutron_dynamic_routing_git_install_branch }}#egg=neutron-dynamic-routing"
  - "git+{{ networking_calico_git_repo }}@{{ networking_calico_git_install_branch }}#egg=networking-calico"
  - "git+{{ dragonflow_git_repo }}@{{ dragonflow_git_install_branch }}#egg=dragonflow"
  - "git+{{ networking_odl_git_repo }}@{{ networking_odl_git_install_branch }}#egg=networking-odl"
  - "git+{{ networking_sfc_git_repo }}@{{ networking_sfc_git_install_branch }}#egg=networking-sfc"
  - "git+{{ networking_bgpvpn_git_repo }}@{{ networking_bgpvpn_git_install_branch }}#egg=networking-bgpvpn"
  - "git+{{ openstack_ceilometer_git_repo }}@{{ openstack_ceilometer_git_install_branch }}#egg=ceilometer"

neutron_bin: "/openstack/venvs/neutron-{{ neutron_venv_tag }}/bin"

neutron_venv_download: "{{ not neutron_developer_mode | bool }}"
